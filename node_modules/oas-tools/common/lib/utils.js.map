{"version":3,"sources":["../../src/lib/utils.js"],"names":["fixNullable","schema","Object","getOwnPropertyNames","forEach","property","nullable","type","Array","isArray","indexOf","generateName","input","nameFor","chars","name","validator","whitelist","undefined"],"mappings":";;;;;;;;AAoBA;;;;;;AApBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIO,SAASA,WAAT,CAAqBC,MAArB,EAA6B;AAClCC,EAAAA,MAAM,CAACC,mBAAP,CAA2BF,MAA3B,EAAmCG,OAAnC,CAA4CC,QAAD,IAAc;AACvD,QACEA,QAAQ,KAAK,MAAb,IACAJ,MAAM,CAACK,QAAP,KAAoB,IADpB,IAEAL,MAAM,CAACM,IAAP,KAAgB,MAFhB,IAGA,CAACC,KAAK,CAACC,OAAN,CAAcR,MAAM,CAACM,IAArB,CAHD,IAIAN,MAAM,CAACM,IAAP,CAAYG,OAAZ,CAAoB,MAApB,MAAgC,CAAC,CALnC,EAME;AACAT,MAAAA,MAAM,CAACM,IAAP,GAAc,CAACN,MAAM,CAACM,IAAR,EAAc,MAAd,CAAd;AACD,KARD,MAQO,IACL,OAAON,MAAM,CAACI,QAAD,CAAb,KAA4B,QAA5B,IACAJ,MAAM,CAACI,QAAD,CAAN,KAAqB,IAFhB,EAGL;AACAL,MAAAA,WAAW,CAACC,MAAM,CAACI,QAAD,CAAP,CAAX;AACD;AACF,GAfD;AAgBD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,KAAK,GAAG,iEAAZ;AACA,MAAIC,IAAI,GAAGC,SAAS,CAACC,SAAV,CAAoBL,KAApB,EAA2BE,KAA3B,CAAX;;AACA,UAAQD,OAAR;AACE,SAAK,YAAL;AACEE,MAAAA,IAAI,IAAI,YAAR;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,IAAI,GAAG,SAASA,IAAhB;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,IAAI,GAAG,QAAQA,IAAf;AACA;;AACF,SAAKG,SAAL;AAAgB;AACd;AAXJ;;AAaA,SAAOH,IAAP;AACD","sourcesContent":["//TODO:\n/*\nEn la reunión del 25 de mayo decidimos: (ver video para concretar más)\n-Todo lo que no sea alfabetico o dígito se borra para nombres de: ARCHIVO, FUNCION (si no hay opId busca una función con func al principio), VARIABLE\n-Despues, a lo que vaya a ser variable no se le quita nada del principio y se le añade var, y a lo que vaya a ser funcion se le agrega func.\n\n\nCasuística: checkear esto\n-No operationId y no x-router-controller\n-Si operationId y no x-router-controller\n-No operationId y si x-router-controller\n-Sí operationId y si x-router-controller\n-Si operationId pero erroneo\n-Project name no válido en package.json\n\nConsiderar que:\n-Nombre de controlador va a ser tambíen nombre de variable\n-OperationId será usado únicamente como nombre de función\n*/\n\nimport * as validator from \"validator\";\n\nexport function fixNullable(schema) {\n  Object.getOwnPropertyNames(schema).forEach((property) => {\n    if (\n      property === \"type\" &&\n      schema.nullable === true &&\n      schema.type !== \"null\" &&\n      !Array.isArray(schema.type) &&\n      schema.type.indexOf(\"null\") === -1\n    ) {\n      schema.type = [schema.type, \"null\"];\n    } else if (\n      typeof schema[property] === \"object\" &&\n      schema[property] !== null\n    ) {\n      fixNullable(schema[property]);\n    }\n  });\n}\n\n/**\n * Generates a valid name, according to value of nameFor.\n * @param {string} input - String to generate a name from.\n * @param {string} nameFor - possible values are controller, function, variable.\n */\nexport function generateName(input, nameFor) {\n  var chars = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789.\";\n  var name = validator.whitelist(input, chars);\n  switch (nameFor) {\n    case \"controller\":\n      name += \"Controller\";\n      break;\n    case \"function\":\n      name = \"func\" + name;\n      break;\n    case \"variable\":\n      name = \"var\" + name;\n      break;\n    case undefined: //'nameFor' is undefined: just normalize\n      break;\n  }\n  return name;\n}\n"],"file":"utils.js"}