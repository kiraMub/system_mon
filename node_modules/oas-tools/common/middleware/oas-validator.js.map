{"version":3,"sources":["../../src/middleware/oas-validator.js"],"names":["validator","ZSchema","ignoreUnresolvableReferences","ignoreUnknownFormats","config","breakOnFirstError","locationFormat","inProperty","dict","path","query","header","cookie","filterParams","methodParameters","pathParameters","res","paramNames","map","param","name","forEach","pathParam","includes","push","addFilesToJSONPropertyValidation","files","dataToValidate","data","file","fieldname","originalname","checkBody","req","requestBody","emptyBody","body","undefined","JSON","stringify","required","message","contentType","Object","keys","content","validSchema","_","cloneDeep","schema","utils","fixNullable","toLowerCase","length","err","validate","error","getLastErrors","logger","info","getRequestProperty","location","requestLocation","find","key","checkParameter","params","errorMessages","i","in","currentParameter","nullable","Boolean","requestParameter","value","convertValue","getParameterType","code","registeredFormats","getRegisteredFormats","checkRequestData","oasDoc","requestedSpecPath","method","next","paths","keepGoing","msg","hasOwnProperty","methodParams","parameters","pathParams","concat","strict","customErrorHandling","Error","assign","failedValidation","validationResult","status","send","warn","locals","type","getParameterValue","parameter","defaultVal","default","paramLocation","val","headers","get","isUndefined","convertArrayValue","arrayValue","parse","Array","isArray","item","index","itemSchema","items","convertBooleanValue","convertNumberValue","numberValue","Number","isNaN","convertObjectValue","convertStringValue","format","date","Date","toString","optionalSchema","optionalType","allowEmptyValue","removeBasePath","reqRoutePath","split","filter","a","basePath","join","OASValidator","url","pathsDict","route","operation","swagger","pType","oVal","originalValue","debug"],"mappings":"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","sourcesContent":["/*!\nOAS-tools module 0.0.0, built on: 2017-03-30\nCopyright (C) 2017 Ignacio Peluaga Lozada (ISA Group)\nhttps://github.com/ignpelloz\nhttps://github.com/isa-group/project-oas-tools\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.*/\n\nimport * as _ from \"lodash-compat\";\nimport * as utils from \"../lib/utils\";\nimport ZSchema from \"z-schema\";\nimport { config } from \"../configurations\";\nconst validator = new ZSchema({\n  ignoreUnresolvableReferences: true,\n  ignoreUnknownFormats: config.ignoreUnknownFormats,\n  breakOnFirstError: false,\n});\n\n/**\n * Returns the Express version of the OAS name for location.\n * @param {string} inProperty - Location of a parameter, value of 'in' property of the oasDoc file for that parameter.\n */\nfunction locationFormat(inProperty) {\n  //TODO: Possible 'in' values: path, query, header, cookie.\n  var dict = {\n    path: \"params\",\n    query: \"query\",\n    header: \"headers\",\n    cookie: \"cookie\",\n  };\n  return dict[inProperty];\n  //return (inProperty == \"path\" ? \"params\" : inProperty); //TODO: if only 'path' changes then this is the solution!\n}\n\n/**\n * Filters path parameters so that method parameters can override them\n * @param {*} methodParameters - Method-specific parameters\n * @param {*} pathParameters - Common parameters for every path method\n */\nfunction filterParams(methodParameters, pathParameters) {\n  var res = methodParameters;\n  var paramNames = methodParameters.map((param) => {\n    return param.name;\n  });\n  pathParameters.forEach((pathParam) => {\n    if (!paramNames.includes(pathParam.name)) {\n      res.push(pathParam);\n    }\n  });\n  return res;\n}\n\n/**\n * transfer fieldname(s) and filename(s) of an multipart/form-data request to a data object\n * that is subsequently passed to a validator checking for required properties of a openAPI path operation\n *\n * @param {array} files\n * @param {object} dataToValidate\n * @returns {object}\n */\nfunction addFilesToJSONPropertyValidation(files, dataToValidate) {\n  const data = dataToValidate;\n  files.forEach((file) => {\n    if (file.fieldname && file.originalname) {\n      data[file.fieldname] = file.originalname;\n    }\n  });\n  return data;\n}\n\nfunction checkBody(req, requestBody) {\n  const emptyBody = req.body == undefined || JSON.stringify(req.body) == \"{}\";\n  if (requestBody.required && emptyBody) {\n    return {\n      message: \"Missing object in the request body. \",\n    };\n  } else if (requestBody.required || !emptyBody) {\n    // can be any of \"application/json\", \"multipart/form-data\", \"image/png\", ...\n    const contentType = Object.keys(requestBody.content)[0];\n    var validSchema = _.cloneDeep(requestBody.content[contentType].schema);\n    utils.fixNullable(validSchema);\n\n    var data = req.body; //JSON.parse(req.body); //Without this everything is string so type validation wouldn't happen TODO: why is it commented?\n    // a multipart/form-data request has a \"files\" property in the request whose\n    // properties need to be passed to evaluating the required parameters in the openAPI spec\n    if (\n      contentType.toLowerCase() === \"multipart/form-data\" &&\n      req.files &&\n      req.files.length > 0\n    ) {\n      data = addFilesToJSONPropertyValidation(req.files, data);\n    }\n    var err = validator.validate(data, validSchema);\n    if (err == false) {\n      return {\n        message: \"Wrong data in the body of the request. \",\n        error: validator.getLastErrors(),\n        content: data,\n      };\n    }\n    config.logger.info(\"Valid parameter on request\");\n  }\n  return undefined;\n}\n\nfunction getRequestProperty(req, location, name) {\n  const requestLocation = req[location];\n  if (location === \"headers\") {\n    return requestLocation[\n      Object.keys(requestLocation).find(\n        (key) => key.toLowerCase() === name.toLowerCase()\n      )\n    ];\n  }\n  return requestLocation[name];\n}\n\nfunction checkParameter(req, params) {\n  const errorMessages = [];\n  for (var i = 0; i < params.length; i++) {\n    //TODO: 'required' property is not required, some parameters may not have it (those in query for example)\n\n    const { name, schema } = params[i];\n    const location = locationFormat(params[i].in);\n    const currentParameter = params[i];\n\n    const nullable =\n      currentParameter.nullable === undefined\n        ? false\n        : Boolean(currentParameter.nullable);\n    const required =\n      currentParameter.required === undefined\n        ? false\n        : Boolean(currentParameter.required);\n\n    const requestParameter = getRequestProperty(req, location, name);\n\n    if (requestParameter === undefined) {\n      if (required) {\n        errorMessages.push({\n          message: \"Missing parameter \" + name + \" in \" + location + \". \",\n        });\n      }\n    } else if (requestParameter === null) {\n      if (nullable === false) {\n        errorMessages.push({\n          message:\n            \"The parameter \" + name + \" in \" + location + \" cannot be null. \",\n        });\n      }\n    } else {\n      // In case the parameter is indeed present, check type. In the case of array, check also type of its items!\n      const value = convertValue(\n        requestParameter,\n        schema,\n        getParameterType(currentParameter),\n        currentParameter\n      );\n      const err = validator.validate(value, schema);\n      if (err == false) {\n        if (err.code == \"UNKNOWN_FORMAT\") {\n          var registeredFormats = ZSchema.getRegisteredFormats();\n          config.logger.error(\"UNKNOWN_FORMAT error - Registered Formats: \");\n          config.logger.error(registeredFormats);\n        }\n        errorMessages.push({\n          message: \"Wrong parameter \" + name + \" in \" + location + \". \",\n          error: validator.getLastErrors(),\n        });\n      } else {\n        config.logger.info(\"Valid parameter on request\");\n      }\n    }\n  }\n  return errorMessages;\n}\n\n/**\n * Checks if the data provided in the request is valid acording to what is specified in the oas specification file.\n * @param {object} paths - Paths section of the oasDoc file.\n * @param {string} requestedSpecPath - Requested url by the client. If the request had parameters in the query those won't be part of this variable.\n * @param {string} method - Method requested by the client.\n * @param {string} req - The whole req object from the client request.\n */\nfunction checkRequestData(oasDoc, requestedSpecPath, method, res, req, next) {\n  var paths = oasDoc.paths;\n  var keepGoing = true;\n  //var msg = \"\";\n  var msg = [];\n\n  if (paths[requestedSpecPath][method].hasOwnProperty(\"requestBody\")) {\n    const message = checkBody(\n      req,\n      paths[requestedSpecPath][method].requestBody\n    );\n    if (message !== undefined) {\n      msg.push(message);\n      keepGoing = false;\n    }\n  }\n\n  if (\n    paths[requestedSpecPath][method].hasOwnProperty(\"parameters\") ||\n    paths[requestedSpecPath].hasOwnProperty(\"parameters\")\n  ) {\n    const methodParams = paths[requestedSpecPath][method].parameters || [];\n    const pathParams = paths[requestedSpecPath].parameters || [];\n    const params = filterParams(methodParams, pathParams);\n    const errorMessages = checkParameter(req, params);\n    if (errorMessages.length !== 0) {\n      msg = msg.concat(errorMessages);\n      keepGoing = false;\n    }\n  }\n\n  if (keepGoing == false && config.strict == true) {\n    if (config.customErrorHandling) {\n      var error = new Error(\"Request validation error\");\n      Object.assign(error, {\n        failedValidation: true,\n        validationResult: msg,\n      });\n      next(error);\n    } else {\n      config.logger.error(JSON.stringify(msg));\n      res.status(400).send(msg);\n    }\n  } else {\n    if (msg.length != 0) {\n      config.logger.warn(JSON.stringify(msg));\n    }\n    res.locals.oasDoc = oasDoc;\n    next();\n  }\n}\n\n/**\n * .\n * @param {string}  - .\n */\nfunction getParameterType(schema) {\n  var type = schema.type;\n  if (!type && schema.schema) {\n    type = getParameterType(schema.schema);\n  }\n  if (!type) {\n    type = \"object\";\n  }\n  return type;\n}\n\n/**\n * .\n * @param {string}  - .\n\nfunction getParameterValue(req, parameter){ //TODO handle: body, form, formData, header, path, query... what about body?\n  var parameterName = parameter.name;\n  return req.params[parameterName];\n}\n*/\nfunction getParameterValue(req, parameter) {\n  var defaultVal = parameter.schema ? parameter.schema.default : undefined;\n  var paramLocation = parameter.in;\n  var val;\n\n  // Get the value to validate based on the operation parameter type\n  switch (paramLocation) {\n    case \"body\":\n      val = req.body;\n\n      break;\n    case \"form\":\n    case \"formData\":\n    case \"header\":\n      val = req.headers[parameter.name.toLowerCase()];\n\n      break;\n    case \"path\":\n      val = req.params[parameter.name]; // TODO: how many parameters can be in the path?\n\n      break;\n    case \"query\":\n      val = _.get(req.query, parameter.name);\n\n      break;\n  }\n  // Use the default value when necessary\n  if (_.isUndefined(val) && !_.isUndefined(defaultVal)) {\n    val = defaultVal;\n  }\n\n  return val;\n}\n\nfunction convertArrayValue(value, schema) {\n  let arrayValue;\n  if (typeof value === \"string\") {\n    try {\n      arrayValue = JSON.parse(value);\n      // Handle situation where the expected type is array but only one value was provided\n      if (Array.isArray(arrayValue) === false) {\n        return [value];\n      }\n    } catch (err) {\n      return value;\n    }\n  }\n\n  return arrayValue.map(value, (item, index) => {\n    const itemSchema = Array.isArray(schema.items)\n      ? schema.items[index]\n      : schema.items;\n\n    return convertValue(\n      item,\n      itemSchema,\n      itemSchema ? itemSchema.type : undefined\n    );\n  });\n}\n\nfunction convertBooleanValue(value) {\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (value === \"true\") {\n    return true;\n  }\n  if (value === \"false\") {\n    return false;\n  }\n  return value;\n}\n\nfunction convertNumberValue(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const numberValue = Number(value);\n  if (isNaN(numberValue)) {\n    return value;\n  }\n  return numberValue;\n}\n\nfunction convertObjectValue(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (err) {\n    return value;\n  }\n}\n\nfunction convertStringValue(value, schema) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n\n  if ([\"date\", \"date-time\"].includes(schema.format)) {\n    const date = new Date(value);\n    if (date.toString() === \"Invalid Date\") {\n      return value;\n    }\n    return date;\n  }\n  return value;\n}\n\n/**\n * .\n * @param {string}  - .\n */\nfunction convertValue(value, optionalSchema, optionalType) {\n  // If there is no value, do not convert it\n  if (value === undefined) {\n    return value;\n  }\n  const schema = optionalSchema === undefined ? {} : optionalSchema;\n\n  // If there is an empty value and allowEmptyValue is true, return it\n  if (schema.allowEmptyValue && value === \"\") {\n    return value;\n  }\n  const type =\n    optionalType === undefined ? getParameterType(schema) : optionalType;\n\n  switch (type) {\n    case \"array\":\n      return convertArrayValue(value, schema);\n\n    case \"boolean\":\n      return convertBooleanValue(value);\n\n    case \"integer\":\n    case \"number\":\n      return convertNumberValue(value);\n\n    case \"object\":\n      return convertObjectValue(value);\n\n    case \"string\":\n    default:\n      return convertStringValue(value, schema);\n  }\n}\n\n/**\n * Subtracts the basePath of the requested path.\n * @param {string} reqRoutePath - Value of req.route.path.\n */\nfunction removeBasePath(reqRoutePath) {\n  return reqRoutePath\n    .split(\"\")\n    .filter((a, i) => {\n      return a !== config.basePath[i];\n    })\n    .join(\"\");\n}\n\nexport default (oasDoc) => {\n  return function OASValidator(req, res, next) {\n    var method = req.method.toLowerCase();\n\n    config.logger.info(\n      \"Requested method-url pair: \" + method + \" - \" + req.url\n    );\n\n    var requestedSpecPath = config.pathsDict[removeBasePath(req.route.path)];\n    var operation = oasDoc.paths[requestedSpecPath][method];\n\n    req.swagger = {\n      params: {},\n      operation: operation,\n    };\n\n    var methodParameters = operation.parameters || [];\n    var pathParameters = oasDoc.paths[requestedSpecPath].parameters || [];\n    var parameters = filterParams(methodParameters, pathParameters);\n    if (parameters != undefined) {\n      parameters.forEach((parameter) => {\n        // TODO: para POST y PUT el objeto se define en 'requestBody' y no en 'parameters'\n        var pType = getParameterType(parameter);\n        var oVal = getParameterValue(req, parameter);\n        var value = convertValue(\n          oVal,\n          parameter.schema == undefined ? parameter : parameter.schema,\n          pType\n        );\n\n        req.swagger.params[parameter.name] = {\n          // pgillis 2019 June 11\n\n          //path: \"/some/path\", //this shows the path to follow on the spec file to get to the parameter but oas-tools doesn't use it!\n          path: requestedSpecPath,\n          schema: parameter,\n          originalValue: oVal,\n          value: value,\n        };\n      });\n    }\n\n    var requestBody = operation.requestBody;\n    if (requestBody != undefined) {\n      // when and endpoint provides a file upload option and other properties,\n      // the content type changes to multipart/form-data\n      // other requestBody types such as \"image/png\" are allowed as well\n      // https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#considerations-for-file-uploads\n      const contentType = Object.keys(requestBody.content)[0];\n      req.swagger.params[requestBody[\"x-name\"]] = {\n        // pgillis 2019 June 11\n\n        //path: \"/some/path\", //this shows the path to follow on the spec file to get to the parameter but oas-tools doesn't use it!\n        path: requestedSpecPath,\n        schema: requestBody.content[contentType].schema,\n        originalValue: req.body,\n        value: req.body,\n      };\n\n      // inject possible file uploads\n      if (\n        contentType.toLowerCase() === \"multipart/form-data\" &&\n        req.files &&\n        req.files.length > 0\n      ) {\n        req.swagger.params[requestBody[\"x-name\"]].files = req.files;\n      }\n    }\n\n    res.locals.requestedSpecPath = requestedSpecPath;\n    config.logger.debug(\n      \"OASValidator  -res.locals.requestedSpecPath: \" +\n        res.locals.requestedSpecPath\n    );\n    checkRequestData(oasDoc, requestedSpecPath, method, res, req, next);\n  };\n};\n"],"file":"oas-validator.js"}