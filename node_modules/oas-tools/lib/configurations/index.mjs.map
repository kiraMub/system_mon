{"version":3,"sources":["../../src/configurations/index.js"],"names":["fs","jsyaml","path","winston","config","setConfigurations","options","encoding","Error","configString","readFileSync","newConfigurations","join","__dirname","safeLoad","process","env","NODE_ENV","err","console","log","controllers","undefined","cwd","c","setProperty","logger","createNewLogger","propertyName","newValue","customFormat","format","printf","info","timestamp","level","message","customLevels","levels","error","warn","custom","debug","colors","addColors","transports","Console","loglevel","handleExceptions","json","combine","colorize","splat","logfile","push","File","filename","maxsize","createLogger","exitOnError"],"mappings":"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","sourcesContent":["/*!\nOAS-tools module 0.0.0, built on: 2017-03-30\nCopyright (C) 2017 Ignacio Peluaga Lozada (ISA Group)\nhttps://github.com/ignpelloz\nhttps://github.com/isa-group/project-oas-tools\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.*/\n\n/**\n * Module dependecies.\n * */\nimport fs from \"fs\";\nimport jsyaml from \"js-yaml\";\nimport path from \"path\";\nimport winston from \"winston\";\n\n/*\n * Export functions and Objects\n */\nexport const config = {\n  setConfigurations: function (options, encoding) {\n    if (!options) {\n      throw new Error(\"Configurations parameter is required\");\n    } else if (typeof options == \"string\") {\n      try {\n        var configString = fs.readFileSync(options, encoding);\n        var newConfigurations;\n        if (options === path.join(__dirname, \"configs.yaml\")) {\n          // default configurations loaded, only development and production environments are available\n          newConfigurations =\n            jsyaml.safeLoad(configString)[\n              process.env.NODE_ENV === \"production\"\n                ? \"production\"\n                : \"development\"\n            ];\n        } else {\n          newConfigurations =\n            jsyaml.safeLoad(configString)[\n              process.env.NODE_ENV || \"development\"\n            ];\n        }\n      } catch (err) {\n        console.log(\n          \"The specified configuration file wasn't found at \" +\n            options +\n            \".  Default configurations will be set\"\n        );\n        config.setConfigurations(path.join(__dirname, \"configs.yaml\"), \"utf8\");\n      }\n    } else {\n      newConfigurations = options;\n    }\n\n    if (newConfigurations.controllers == undefined) {\n      //TODO: Fix this!\n      newConfigurations.controllers = path.join(process.cwd(), \"./controllers\"); // for production (document that if no controller is specified then 'node' must be done wher /controllers is)\n    }\n    //If newConfigurations does indeed contain 'controllers', it will be initialized inside the following lop:\n    for (const c in newConfigurations) {\n      config.setProperty(c, newConfigurations[c]);\n      if (c == \"loglevel\") {\n        //loglevel changes, then new logger is needed\n        config.logger = createNewLogger();\n      } else if (c === \"customLogger\") {\n        config.setProperty(\"logger\", newConfigurations[c]);\n      }\n    }\n  },\n\n  setProperty: function (propertyName, newValue) {\n    config[propertyName] = newValue;\n  },\n};\n\n/**\n * Setup default configurations\n */\nconfig.setConfigurations(path.join(__dirname, \"configs.yaml\"), \"utf8\");\nconfig.logger = createNewLogger();\nfunction createNewLogger() {\n  var customFormat = winston.format.printf(\n    (info) => `${info.timestamp} ${info.level}: ${info.message}`\n  );\n\n  /**\n   * Configure here your custom levels.\n   */\n  var customLevels = {\n    levels: {\n      error: 7,\n      warn: 8,\n      custom: 9,\n      info: 10,\n      debug: 11,\n    },\n    colors: {\n      error: \"red\",\n      warn: \"yellow\",\n      custom: \"magenta\",\n      info: \"white\",\n      debug: \"blue\",\n    },\n  };\n\n  winston.addColors(customLevels.colors);\n  const transports = [\n    new winston.transports.Console({\n      level: config.loglevel,\n      handleExceptions: true,\n      json: false,\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.timestamp(),\n        winston.format.splat(),\n        customFormat\n      ),\n    }),\n  ];\n  if (config.logfile != undefined) {\n    transports.push(\n      new winston.transports.File({\n        level: config.loglevel,\n        filename: config.logfile,\n        handleExceptions: true,\n        maxsize: 5242880, //5MB\n        format: winston.format.combine(\n          winston.format.timestamp(),\n          winston.format.splat(),\n          customFormat\n        ),\n      })\n    );\n  }\n  return winston.createLogger({\n    levels: customLevels.levels,\n    transports,\n    exitOnError: false,\n  });\n}\n"],"file":"index.mjs"}