{"version":3,"sources":["../../src/lib/utilsOld.js"],"names":["getBasePath","reqRoutePath","basePath","first","path_array","split","i","length","charAt","toUpperCase","slice","generateOperationId","method","path","output","path2","chunck","replace","toLowerCase","normalize_controllerName","controllerName","normalize","operationId","undefined","validOpId","getExpressVersion","oasPath"],"mappings":"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","sourcesContent":["//TODO:\n/*\nEn la reunión del 25 de mayo decidimos: (ver video para concretar más)\n-Todo lo que no sea alfabetico o dígito se borra para nombres de archivos tanto para archivos como para variables\n-Despues, a lo que vaya a ser variable no se le quita nada del principio y se le añade var.\n\n\nCasuística: checkear esto\n-No operationId y no x-router-controller\n-Si operationId y no x-router-controller\n-No operationId y si x-router-controller\n-Sí operationId y si x-router-controller\n-Si operationId pero erroneo\n-Project name no válido en package.json\n*/\n\n/**\n * Removes parameters from the requested path and returns the base path.\n * @param {string} reqRoutePath - Value or req.route.path (express version).\n */\nexport function getBasePath(reqRoutePath) {\n  var basePath = \"\";\n  var first = true;\n  var path_array = reqRoutePath.split(\"/\");\n  for (var i = 0; i < path_array.length; i++) {\n    //if (path_array[i].charAt(0) !== ':' && first == true && path_array[i].charAt(0) !== '') { // TODO: compare to '' or ' '?\n    if (\n      path_array[i].charAt(0) !== \":\" &&\n      first == true &&\n      path_array[i].charAt(0) !== \" \"\n    ) {\n      basePath += path_array[i];\n      first = false;\n    } else if (path_array[i].charAt(0) !== \":\") {\n      basePath +=\n        path_array[i].charAt(0).toUpperCase() +\n        path_array[i].slice(1, path_array[i].length);\n    }\n  }\n  return basePath;\n}\n\n/** TODO: para paths como /2.0/votos/{talkId}/ swagger crea 2_0votosTalkId que no es válido! qué debe hacer oas-tools?\n * Generates an operationId according to the method and path requested the same way swagger-codegen does it.\n * @param {string} method - Requested method.\n * @param {string} path - Requested path as shown in the oas doc.\n */\nexport function generateOperationId(method, path) {\n  var output = \"\";\n  var path2 = path.split(\"/\");\n  for (var i = 1; i < path2.length; i++) {\n    var chunck = path2[i].replace(/[{}]/g, \"\");\n    output += chunck.charAt(0).toUpperCase() + chunck.slice(1, chunck.length);\n  }\n  output += method.toUpperCase();\n  return output.charAt(0).toLowerCase() + output.slice(1, output.length);\n}\n\n/**\n * The generated controller name is done using the path or the router property and these can have characters which are\n * allowed for variable names. As services must be required in controller files these names must be normalized.\n * @param {string} controllerName - Name of controller, either autogenerated or specified using router property.\n */\nexport function normalize_controllerName(controllerName) {\n  return controllerName\n    .replace(/^[^a-zA-Z]*/, \"\")\n    .replace(/[^a-zA-Z0-9]*/g, \"\");\n}\n\n/**\n * OperationId can have values which are not accepted as function names. This function generates a valid name\n * @param {object} operationId - OpreationId of a given path-method pair.\n */\nexport function normalize(operationId) {\n  if (operationId == undefined) {\n    return undefined;\n  }\n  var validOpId = \"\";\n  for (var i = 0; i < operationId.length; i++) {\n    if (\n      operationId[i] == \"-\" ||\n      operationId[i] == \" \" ||\n      operationId[i] == \".\"\n    ) {\n      validOpId += operationId[i + 1].toUpperCase();\n      i += 1;\n    } else {\n      validOpId += operationId[i];\n    }\n  }\n  return validOpId;\n}\n\n/**\n * Converts a oas-doc type path into an epxress one.\n * @param {string} oasPath - Path as shown in the oas-doc.\n */\nexport function getExpressVersion(oasPath) {\n  return oasPath.replace(/{/g, \":\").replace(/}/g, \"\");\n}\n"],"file":"utilsOld.mjs"}